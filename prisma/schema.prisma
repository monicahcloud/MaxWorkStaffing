

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {

id String @id @default(cuid())

userId String

resumeType     String?
resumeTitle String?
description String?

photoUrl String?
themeColor String @default("#000000")
borderStyle String @default("squircle")

createdAt      DateTime        @default(now())
 updatedAt   DateTime @updatedAt
firstName   String?
  lastName    String?
  jobTitle    String?
  address     String?
  phone       String?
  email       String?
  userEmail   String?
  userName    String?
  website String?
  summary String?


workExperience WorkExperience[]
education Education[]
  skills String[]
}

model WorkExperience {
  id String @id @default(cuid())
  position String?
  company String?
  startDate DateTime?
  endDate DateTime?
    location     String?
description String?

resumeId String
resume Resume @relation(fields: [resumeId], references: [id],  onDelete: Cascade)
createdAt      DateTime        @default(now())
 updatedAt   DateTime @updatedAt
}

model Education {
  id String @id @default(cuid())
  degree String?
  school String?
  startDate DateTime?
  endDate DateTime?
    location     String?
description String?

resumeId String
resume Resume @relation(fields: [resumeId], references: [id],  onDelete: Cascade)
createdAt      DateTime        @default(now())
 updatedAt   DateTime @updatedAt
}

model UserSubscription {
  id                      String   @id @default(cuid())
  userId                  String   @unique
  stripeCustomerId        String   @unique
  stripeSubscriptionId    String   @unique
  stripePriceId           String
  stripeCurrentPeriodEnd  DateTime
  stripeCancelAtPeriodEnd Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}